SQL: standard query language
SQL is a standard language for accessing and manipulating databases.

Table name:Customers
The following SQL statement returns all records from a table named "Customers":
SELECT * FROM Customers;
A record is a horizontal entity in a table.
A column is a vertical entity in a table that contains all information associated with a specific field in a table.


A database most often contains one or more tables. Each table is identified by a name (e.g. "Customers" or "Orders"), and contain records (rows) with data.

SQL keywords are NOT case sensitive: select is the same as SELECT



SELECT - extracts data from a database
UPDATE - updates data in a database
DELETE - deletes data from a database
INSERT INTO - inserts new data into a database
CREATE DATABASE - creates a new database
ALTER DATABASE - modifies a database
CREATE TABLE - creates a new table
ALTER TABLE - modifies a table
DROP TABLE - deletes a table
CREATE INDEX - creates an index (search key)
DROP INDEX - deletes an index



Here, column1, column2, ... are the field names of the table you want to select data from.
The table_name represents the name of the table you want to select data from.
SELECT column1, column2, ...
FROM table_name;




SELECT DISTINCT column1, column2, ...
FROM table_name;


By using the DISTINCT keyword in a function called COUNT, we can return the number of different countries.
SELECT COUNT(DISTINCT Country) FROM Customers;



The WHERE clause is used to filter records.
It is used to extract only those records that fulfill a specified condition.
SELECT * FROM table_name where countries="maxico"

also some where operations are 
< lessthan
> greaterthan
>= greaterthan or equal
<= lessthan or equal
<> or != not equal
BETWEEN Between a certain range :Where price BETWEEN 50 AND 100
LIKE search for a pattern
IN to specify multiple possible value where city in('london','paris');



ORDERB BY:
SELECT * FROM table_name ORDER BY price:sort table in accessing order based on price
SELECT * FROM table_name ORDER BY price DESC :sort table in descending order based on price
SELECT * FROM table_name ORDER BY price DESC,name ASC:1st priority is price if multiple name has same price then its sort according to descending order of name



AND:
SELECT * FROM Customers
WHERE Country = 'Brazil'
AND City = 'Rio de Janeiro'
AND CustomerID > 50;


OR:
SELECT * FROM Customers
WHERE City = 'Berlin' OR CustomerName LIKE 'G%' OR Country = 'Norway';


combine and or:
SELECT * FROM Customers
WHERE Country = 'Spain' AND (CustomerName LIKE 'G%' OR CustomerName LIKE 'R%');



NOT:
SELECT * FROM Customers
WHERE NOT Country = 'Spain';



INSERT INTO : insert data in new table
INSERT INTO table_name (column1, column2, column3, ...)
VALUES (value1, value2, value3, ...);
-> for specific column insert value

INSERT INTO table_name  VALUES (value1, value2, value3, ...);
->for all culumn insert we dont need to specify coumn name


Insert multiple row:
INSERT INTO table_name (column1, column2, column3, ...)
VALUES (value1, value2, value3, ...),
(value1, value2, value3, ...),
(value1, value2, value3, ...);



NULL:
for check IS NULL /IS NOT NULL
SELECT CustomerName, ContactName, Address
FROM Customers
WHERE Address IS NULL;



UPDATE:
UPDATE Customers
SET ContactName = 'Alfred Schmidt', City= 'Frankfurt'
WHERE CustomerID = 1;
Be careful when updating records. If you omit the WHERE clause, ALL records will be updated!